Description: "Survey app hosting with S3 and CloudFront"

Parameters:
  BucketName:
    Type: String
    Default: "survey-app-bucket-name"

Resources:
  # Create the bucket to contain the website HTMLs
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref BucketName
      WebsiteConfiguration:
        ErrorDocument: "irndex.html"
        IndexDocument: "index.html"
  
  ReadPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
            Principal:
             CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3Bucket
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403 # not found
            ResponseCode: 404
            ResponsePagePath: "/index.html"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 3600 # in seconds
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: 86400 # in seconds
          MinTTL: 60 # in seconds
          TargetOriginId: s3origin
          ViewerProtocolPolicy: "allow-all"
        # This DefaultRootObject configuration is not enough.
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt "S3Bucket.DomainName"
            Id: s3origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        PriceClass: "PriceClass_All"
  PublishUser:
    Type: "AWS::IAM::User"
    Properties:
      Policies:
        - PolicyName: !Sub "publish-to-${S3Bucket}"
          PolicyDocument:
            Statement:
              - Action: "s3:*"
                Effect: Allow
                Resource:
                  - !Sub "arn:aws:s3:::${S3Bucket}"
                  - !Sub "arn:aws:s3:::${S3Bucket}/*"

  PublishCredentials:
    Type: "AWS::IAM::AccessKey"
    Properties:
      UserName: !Ref PublishUser

Outputs:
  Bucket:
    Description: "S3 Bucket Name"
    Value: !Ref S3Bucket
  BucketUrl:
    Description: "S3 Bucket Url"
    Value: !GetAtt "S3Bucket.WebsiteURL"
  AccessKeyId:
    Description: "S3 Access Key"
    Value: !Ref PublishCredentials
  AccessKeySecret:
    Description: "S3 Secret Key"
    Value: !GetAtt PublishCredentials.SecretAccessKey
  DistributionId:
    Description: "CloudFront Distribution ID"
    Value: !Ref CloudFrontDistribution
  Domain:
    Description: "Cloudfront Domain"
    Value: !GetAtt CloudFrontDistribution.DomainName